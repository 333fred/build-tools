task ntcoreDesktopZip(type: Zip) {
    description = 'Creates the ntcore-desktop.zip file, with the contents of all zip files in ntcore-zip'
    group = 'ntcore'
    baseName = 'ntcore'
    classifier = 'desktop'
    destinationDir = buildDir

    fileTree(dir: 'ntcore-zip', include: '**/*.zip').each { zip ->
        from zipTree(zip)
    }
}

task ntcoreDesktopJar(type: Jar) {
    description = 'Creates the ntcore-desktop.jar file, with the contents of all zip and jar files in ntcore-jar'
    group = 'ntcore'
    baseName = 'ntcore'
    classifier = 'desktop'
    destinationDir = buildDir

    fileTree(dir: 'ntcore-jar', include: ['**/*.zip', '**/*.jar'], exclude: ['*javadoc*', '*sources*']).each { zip ->
        from zipTree(zip)
    }
}

publishing {
    publications {
        ntcoreZip(MavenPublication) {
            artifact ntcoreDesktopZip
            def ntcoreArmZip = fileTree(dir: 'arm', include: 'ntcore-arm*.zip').files[0]
            artifact(ntcoreArmZip) {
                classifier = getClassifier(ntcoreArmZip.name)
            }

            def ntcoreSourcesZip = fileTree(dir: 'sources', include: 'ntcore-sources*.zip').files[0]
            artifact(ntcoreSourcesZip) {
                classifier = getClassifier(ntcoreSourcesZip.name)
            }

            groupId 'edu.wpi.first.wpilib.networktables.cpp'
            artifactId 'NetworkTables'
            version '3.0.0-SNAPSHOT'
        }
        ntcoreJar(MavenPublication) {
            artifact ntcoreDesktopJar

            def ntcoreArmJar = fileTree(dir: 'arm', include: 'ntcore-arm*.jar').files[0]
            artifact(ntcoreArmJar) {
                classifier = getClassifier(ntcoreArmJar.name)
            }

            def ntcoreSourcesJar = fileTree(dir: 'sources', include: 'ntcore-source*.jar').files[0]
            artifact(ntcoreSourcesJar) {
                classifier = getClassifier(ntcoreSourcesJar.name)
            }

            def ntcoreJavadocJar = fileTree(dir: 'sources', include: 'ntcore-javadoc*.jar').files[0]
            artifact(ntcoreJavadocJar) {
                classifier = getClassifier(ntcoreJavadocJar.name)
            }

            groupId 'edu.wpi.first.wpilib.networktables.java'
            artifactId 'NetworkTables'
            version '3.0.0-SNAPSHOT'
        }
    }
}

def getClassifier(name) {
    return name[(name.indexOf('-')+1)..-5]
}

task clean(type: Delete) {
    delete buildDir
}
